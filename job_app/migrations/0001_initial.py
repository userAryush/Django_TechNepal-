# Generated by Django 5.2 on 2025-05-26 14:44

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('avatar', models.ImageField(default='images/avatar.svg', upload_to='images/avatars/')),
                ('user_type', models.CharField(choices=[('S', 'Seeker'), ('E', 'Employer')], default='S', max_length=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=250)),
                ('company_email', models.EmailField(default='Put your company email', max_length=200, unique=True)),
                ('company_id', models.IntegerField(default=1, unique=True)),
                ('main_service', models.CharField(default='IT Service', max_length=200)),
                ('founder', models.CharField(default='Aryush Khatri', max_length=400)),
                ('founded', models.DateField(blank=True, null=True)),
                ('company_description', models.TextField(blank=True, null=True)),
                ('motto', models.TextField(default='Please insert Company short motto')),
                ('company_size', models.CharField(default='1+')),
                ('services', models.JSONField(blank=True, default=list)),
                ('location', models.CharField(max_length=200)),
                ('company_link', models.URLField(blank=True, null=True)),
                ('company_picture', models.ImageField(default='images/company_default.png', upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(default=1, limit_choices_to={'user_type': 'E'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_post', models.CharField(max_length=100)),
                ('job_description', models.TextField()),
                ('job_status', models.CharField(choices=[('O', 'Open'), ('C', 'Closed'), ('P', 'Pending')], max_length=1)),
                ('salary_range', models.CharField(max_length=100)),
                ('job_type', models.CharField(choices=[('F', 'Full-time'), ('P', 'Part-time'), ('R', 'Remote'), ('I', 'Internship')], max_length=1)),
                ('post_logo', models.ImageField(default='images/job_default.jpg', upload_to='')),
                ('job_responsibility', models.TextField(default='DO your job anyhow')),
                ('requirements', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='job_app.company')),
            ],
        ),
        migrations.CreateModel(
            name='Apply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='email@gmail.com', max_length=200)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('portfolio_link', models.URLField(blank=True, null=True)),
                ('resume', models.FileField(upload_to='resumes/')),
                ('address', models.CharField(default='address', max_length=200)),
                ('full_name', models.CharField(default='fullname', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='job_app.job')),
            ],
        ),
    ]
